get init --初始化管理这个文件夹

get status --检测查看

git add 1.html --单独的文件加入管理

git add . --当前文件夹所有的文件加入管理

git commit -m 'v1' --生成版本'描述信息'

git log --查看版本记录

##### 1
#个人配置：用户名、邮箱


Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'NZC@DESKTOP-C4ASRP9.(none)')


#回滚

git reset --hard 3c795f8b7414aa314e328d1763ca308940dbb062  #回到这个版本号

git relog #回滚之后版本的记录

##### 分支
主干线 master  
修完bug合并到master	分支 dev 还可行 每个分支为独立的
git branch --查看分支
git branch dev --建立dev分支
git checkout dev --切换到dev分支
git branch bug --建一个bug分支，切换到bug分支，然后修改
换回主分支，git merge bug ,合并分支，然后就可以git branch -d bug,删除分支了
继续开发分支，合并时因主干之前修bug（会报冲突）手动修改？ 再提交就好了

##### 工作流
最简单工作流1
至少得有两个分支  master （main）分支只保留公测版
dev（分支）上搞开发


##### 推

输入$ git remote rm origin(删除关联的origin的远程库)

git remote add origin https://github.com/Hibari-69/test1.git	起个orange别名
git push -u origin dev

克隆远程仓库
git clone --远程仓库地址 （内部已实现git remote add origin 。。。)






#杂七杂八
mkdir dbhot --建文件夹
touch 2.html --添加文件（Linux）
type nul>1.txt --加文件（win）（Windows powerShell 里不能用？）
pwd --查看路径
cat index.html --看一下代码

##### 总结
git branch
git branch 名称
git checkout 名称
git merge 要合并的分支
git merge -d 分支名称  
